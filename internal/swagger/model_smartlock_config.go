/*
 * Nuki API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: v1
 * Contact: contact@nuki.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type SmartlockConfig struct {
	// The name of the smartlock for new users
	Name string `json:"name"`
	// The latitude of the smartlock position
	Latitude float32 `json:"latitude"`
	// The longitude of the smartlock position
	Longitude float32 `json:"longitude"`
	// The capabilities indicate whether door opening via app is possible, RTO is possible or both: 0 .. only door opening possible, 1 .. both possible, 2 .. only RTO possible (only for type=2)
	Capabilities int32 `json:"capabilities,omitempty"`
	// True if the door should be unlatched on unlocking (knob) (only for type=1 and type=3)
	AutoUnlatch bool `json:"autoUnlatch,omitempty"`
	// True if the pairing is allowed via the smartlock button
	PairingEnabled bool `json:"pairingEnabled,omitempty"`
	// True if the button on the smartlock is enabled
	ButtonEnabled bool `json:"buttonEnabled,omitempty"`
	// True if the LED on the smartlock is enabled
	LedEnabled bool `json:"ledEnabled,omitempty"`
	// The brightness of the LED: 0 .. off, 5 .. max (only for type=1 and type=3)
	LedBrightness int32 `json:"ledBrightness,omitempty"`
	// [deprecated] The timezone offset (in minutes)
	TimezoneOffset int32 `json:"timezoneOffset"`
	// [deprecated] The daylight saving mode: 0 .. off, 1 .. european
	DaylightSavingMode int32 `json:"daylightSavingMode,omitempty"`
	// True if a fob is paired with the smartlock
	FobPaired bool `json:"fobPaired,omitempty"`
	// The fob action if button is pressed once: type=0: 0 .. none, 1 .. unlock, 2 .. lock, 3 .. lock 'n' go, 4 .. intelligent (lock/unlocked based on the current state); type=2: 0 .. none, 1 .. toggle ring to open, 2 .. activate ring to open, 3 .. deactivate ring to open, 7 .. open (electric strike actuation), 8 .. ring
	FobAction1 int32 `json:"fobAction1,omitempty"`
	// The fob action if button is pressed twice: type=0: 0 .. none, 1 .. unlock, 2 .. lock, 3 .. lock 'n' go, 4 .. intelligent (lock/unlocked based on the current state); type=2: 0 .. none, 1 .. toggle ring to open, 2 .. activate ring to open, 3 .. deactivate ring to open, 7 .. open (electric strike actuation), 8 .. ring
	FobAction2 int32 `json:"fobAction2,omitempty"`
	// The fob action if button is pressed 3 times: type=0: 0 .. none, 1 .. unlock, 2 .. lock, 3 .. lock 'n' go, 4 .. intelligent (lock/unlocked based on the current state); type=2: 0 .. none, 1 .. toggle ring to open, 2 .. activate ring to open, 3 .. deactivate ring to open, 7 .. open (electric strike actuation), 8 .. ring
	FobAction3 int32 `json:"fobAction3,omitempty"`
	// True if the smartlock should only lock once (instead of twice) (only for type=1)
	SingleLock bool `json:"singleLock"`
	// The operating mode of the opener (only for type=2): 0x00 .. generic door opener, 0x01 .. analogue intercom, 0x02 .. digital intercom, 0x03 .. digital intercom Siedle, 0x04 .. digital intercom TCS, 0x05 .. digital intercom Bticino, 0x06 .. analog intercom Siedle HTS, 0x07 .. digital intercom STR, 0x08 .. digital intercom Ritto, 0x09 .. digital intercom Fermax, 0x0A .. digital intercom Comelit, 0x0B .. digital intercom Urmet BiBus, 0x0C .. digital intercom Urmet 2Voice, 0x0D .. digital intercom Golmar, 0x0E .. digital intercom SKS, 0x0F .. digital intercom Spare
	OperatingMode int32 `json:"operatingMode,omitempty"`
	// The advertising mode (battery saving): 0 .. automatic, 1 .. normal, 2 .. slow, 3 .. slowest
	AdvertisingMode int32 `json:"advertisingMode"`
	// True if a keypad is paired with the smartlock
	KeypadPaired bool `json:"keypadPaired,omitempty"`
	// The homekit state: 0 .. unavailable, 1 .. disabled, 2 .. enabled, 3 .. enabled & paired
	HomekitState int32 `json:"homekitState,omitempty"`
	// The timezone id (check https://developer.nuki.io for ids)
	TimezoneId int32 `json:"timezoneId"`
	// The operation id - if set it's locked for another operation
	OperationId string `json:"operationId,omitempty"`
}
